{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\NextJS\\\\meetup-app\\\\pages\\\\index.js\";\nimport { useEffect, useState } from 'react';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst password = 'NvJkMkQ5cxnP2apd';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n}\n/*\r\n\r\nexport async function getServerSideProps(context){ //Works only one page components and name is fixed\r\n    //any code written here runs in the server side only (every time a client requests for it)\r\n    //This function generates props and sends it to the HomePage component\r\n    \r\n    const req = context.req;    //request data\r\n    const res = context.res;    //response data\r\n    \r\n    return {\r\n        props:{\r\n            meetups:DUMMY_MEETUPS,\r\n        }\r\n    }\r\n}\r\n*/\n\n\nexport async function getStaticProps() {\n  //Works only one page components and name is fixed\n  //Any code you write here runs only on the build time\n  //This function generates props and sends it to the HomePage component\n  const client = await MongoClient.connect('mongodb+srv://rohan:' + password + '@cluster0.yvlu5.mongodb.net/myFirstDatabase?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  return {\n    props: {\n      meetups\n    },\n    revalidate: 10 //Regenerates the page after 10s if there is request for this page\n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["E:/NextJS/meetup-app/pages/index.js"],"names":["useEffect","useState","MongoClient","MeetupList","password","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","revalidate"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,WAAR,QAA0B,SAA1B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,MAAMC,QAAQ,GAAG,kBAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,eAAeC,cAAf,GAA+B;AAAI;AACtC;AACA;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoB,yBAAuBN,QAAvB,GAAgC,yEAApD,CAArB;AACA,QAAMO,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAGA,SAAO;AACHT,IAAAA,KAAK,EAAC;AACFC,MAAAA;AADE,KADH;AAIHS,IAAAA,UAAU,EAAC,EAJR,CAIa;;AAJb,GAAP;AAMH;AAGD,eAAeX,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport {MongoClient} from 'mongodb';\r\nimport MeetupList from '../components/meetups/MeetupList';\r\nconst password = 'NvJkMkQ5cxnP2apd'\r\n\r\nfunction HomePage(props) {\r\n    return <MeetupList meetups={props.meetups}></MeetupList>\r\n}\r\n\r\n/*\r\n\r\nexport async function getServerSideProps(context){ //Works only one page components and name is fixed\r\n    //any code written here runs in the server side only (every time a client requests for it)\r\n    //This function generates props and sends it to the HomePage component\r\n    \r\n    const req = context.req;    //request data\r\n    const res = context.res;    //response data\r\n    \r\n    return {\r\n        props:{\r\n            meetups:DUMMY_MEETUPS,\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\n\r\nexport async function getStaticProps(){   //Works only one page components and name is fixed\r\n    //Any code you write here runs only on the build time\r\n    //This function generates props and sends it to the HomePage component\r\n    const client = await MongoClient.connect('mongodb+srv://rohan:'+password+'@cluster0.yvlu5.mongodb.net/myFirstDatabase?retryWrites=true&w=majority')\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find().toArray();\r\n\r\n    \r\n    return {\r\n        props:{\r\n            meetups,\r\n        },\r\n        revalidate:10,  //Regenerates the page after 10s if there is request for this page\r\n    }\r\n}\r\n\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}